trigger:
- main  

stages:
  - stage: Build
    pool:
      vmImage: ubuntu-latest  
    jobs:
      - job: Build
        displayName: 'Build Libraries'
        workspace:
          clean: all  
        steps:

          - task: NodeTool@0
            inputs:
              versionSpec: '18.x' 
            displayName: 'Install Node.js'

          - script: |
              npm install -g @angular/cli@16.0.6  
              npm install  
            displayName: 'Install dependencies'

          - script: |
              ng build category-lib 
            displayName: 'Build category-lib Library'

          - script: |
              ng build image-selector-lib 
            displayName: 'Build image-selector-lib Library'

          - script: |
              ng build custom-markdown-lib
            displayName: 'Build custom-markdown-lib Library'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)' 
              Contents: '.npmrc' 
              TargetFolder: '$(System.DefaultWorkingDirectory)/dist/category-lib' 
            displayName: 'Copy .npmrc to category-lib dist folder'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'  
              Contents: '.npmrc'  
              TargetFolder: '$(System.DefaultWorkingDirectory)/dist/image-selector-lib'  
            displayName: 'Copy .npmrc to image-selector-lib dist folder'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'  
              Contents: '.npmrc'  
              TargetFolder: '$(System.DefaultWorkingDirectory)/dist/custom-markdown-lib' 
            displayName: 'Copy .npmrc to custom-markdown-lib dist folder'

          - task: CopyFiles@2
            inputs:
              SourceFolder: 'dist/category-lib'  
              Contents: '**'  
              TargetFolder: '$(Build.ArtifactStagingDirectory)/category-lib'  
            displayName: 'Copy category-lib Artifacts'

          - task: CopyFiles@2
            inputs:
              SourceFolder: 'dist/image-selector-lib' 
              Contents: '**' 
              TargetFolder: '$(Build.ArtifactStagingDirectory)/image-selector-lib'  
            displayName: 'Copy image-selector-lib Artifacts'

          - task: CopyFiles@2
            inputs:
              SourceFolder: 'dist/custom-markdown-lib'  
              Contents: '**'  
              TargetFolder: '$(Build.ArtifactStagingDirectory)/custom-markdown-lib' 
            displayName: 'Copy custom-markdown-lib Artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/category-lib' 
              artifactName: 'category-lib-artifact'  
            displayName: 'Publish category-lib Artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/image-selector-lib'  
              artifactName: 'image-selector-lib-artifact'  
            displayName: 'Publish image-selector-lib Artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/custom-markdown-lib'  
              artifactName: 'custom-markdown-lib-artifact'  
            displayName: 'Publish custom-markdown-lib Artifacts'

  - stage: Publish
    dependsOn: Build
    condition: succeeded('Build')
    pool:
      vmImage: ubuntu-latest 
    jobs:
      - job:
        displayName: 'Publish Libraries'
        workspace:
          clean: all  
        steps:

          - task: DownloadPipelineArtifact@2
            inputs:
              source: "current"
              artifact: "category-lib-artifact"
              path: '$(System.DefaultWorkingDirectory)/category-lib'    

          - task: npmAuthenticate@0
            inputs:
              workingFile: '$(System.DefaultWorkingDirectory)/category-lib/.npmrc'

          - task: Npm@1
            inputs:
              command: 'publish'
              workingDir: '$(System.DefaultWorkingDirectory)/category-lib'
              publishRegistry: useFeed
              publishFeed: BlogApp/blogapplib
            displayName: 'Publish category-lib'

          - task: DownloadPipelineArtifact@2
            inputs:
              source: "current"
              artifact: "image-selector-lib-artifact"
              path: '$(System.DefaultWorkingDirectory)/image-selector-lib'    

          - task: npmAuthenticate@0
            inputs:
              workingFile: '$(System.DefaultWorkingDirectory)/image-selector-lib/.npmrc'

          - task: Npm@1
            inputs:
              command: 'publish'
              workingDir: '$(System.DefaultWorkingDirectory)/image-selector-lib'
              publishRegistry: useFeed
              publishFeed: BlogApp/blogapplib
            displayName: 'Publish image-selector-lib'

          - task: DownloadPipelineArtifact@2
            inputs:
              source: "current"
              artifact: "custom-markdown-lib-artifact"
              path: '$(System.DefaultWorkingDirectory)/custom-markdown-lib'    

          - task: npmAuthenticate@0
            inputs:
              workingFile: '$(System.DefaultWorkingDirectory)/custom-markdown-lib/.npmrc'

          - task: Npm@1
            inputs:
              command: 'publish'
              workingDir: '$(System.DefaultWorkingDirectory)/custom-markdown-lib'
              publishRegistry: useFeed
              publishFeed: BlogApp/blogapplib
            displayName: 'Publish custom-markdown-lib'

