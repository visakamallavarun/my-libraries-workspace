trigger:
- main  # Trigger the pipeline on push to the 'main' branch

stages:
  - stage: Build
    pool:
      vmImage: ubuntu-latest  # Use the latest Ubuntu image
    jobs:
      - job: Build
        displayName: 'Build Libraries'
        workspace:
          clean: all  # Clean the workspace before each run
        steps:
          # Install Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'  # Use Node.js 16.x
            displayName: 'Install Node.js'

          # Install Angular CLI and dependencies
          - script: |
              npm install -g @angular/cli@16.0.6  
              npm install  
            displayName: 'Install dependencies'
            
          # Build category-lib
          - script: |
              ng build category-lib 
            displayName: 'Build category-lib Library'

          # Build image-selector-lib
          - script: |
              ng build image-selector-lib 
            displayName: 'Build image-selector-lib Library'

          # Build custom-markdown-lib
          - script: |
              ng build custom-markdown-lib
            displayName: 'Build custom-markdown-lib Library'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'  # Source directory where .npmrc is located
              Contents: '.npmrc'  # File to copy
              TargetFolder: '$(System.DefaultWorkingDirectory)/dist/category-lib'  # Target directory for the copy
            displayName: 'Copy .npmrc to category-lib dist folder'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'  # Source directory where .npmrc is located
              Contents: '.npmrc'  # File to copy
              TargetFolder: '$(System.DefaultWorkingDirectory)/dist/image-selector-lib'  # Target directory for the copy
            displayName: 'Copy .npmrc to image-selector-lib dist folder'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'  # Source directory where .npmrc is located
              Contents: '.npmrc'  # File to copy
              TargetFolder: '$(System.DefaultWorkingDirectory)/dist/custom-markdown-lib'  # Target directory for the copy
            displayName: 'Copy .npmrc to custom-markdown-lib dist folder'

          # Save build artifacts for category-lib
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'dist/category-lib'  # Path to the packed category-lib
              Contents: '**'  # Include only the .tgz file
              TargetFolder: '$(Build.ArtifactStagingDirectory)/category-lib'  # Staging directory
            displayName: 'Copy category-lib Artifacts'

          # Save build artifacts for image-selector-lib
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'dist/image-selector-lib'  # Path to the packed image-selector-lib
              Contents: '**'  # Include only the .tgz file
              TargetFolder: '$(Build.ArtifactStagingDirectory)/image-selector-lib'  # Staging directory
            displayName: 'Copy image-selector-lib Artifacts'

          # Save build artifacts for custom-markdown-lib
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'dist/custom-markdown-lib'  # Path to the packed custom-markdown-lib
              Contents: '**'  # Include only the .tgz file
              TargetFolder: '$(Build.ArtifactStagingDirectory)/custom-markdown-lib'  # Staging directory
            displayName: 'Copy custom-markdown-lib Artifacts'

          # Publish build artifacts for category-lib
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/category-lib'  # Publish from the staging directory for category-lib
              artifactName: 'category-lib-artifact'  # Name of the artifact for category-lib
            displayName: 'Publish category-lib Artifacts'

          # Publish build artifacts for image-selector-lib
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/image-selector-lib'  # Publish from the staging directory for image-selector-lib
              artifactName: 'image-selector-lib-artifact'  # Name of the artifact for image-selector-lib
            displayName: 'Publish image-selector-lib Artifacts'

          # Publish build artifacts for custom-markdown-lib
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/custom-markdown-lib'  # Publish from the staging directory for custom-markdown-lib
              artifactName: 'custom-markdown-lib-artifact'  # Name of the artifact for custom-markdown-lib
            displayName: 'Publish custom-markdown-lib Artifacts'

